#include <bits/stdc++.h>
#define int long long int
#define endl '\n'
using namespace std;

const int N = 1e5 + 5;
const int mod = 1e9 + 7;
const int mn = -1;
const int mx = 1e18+7;
vector<int>v[1000];
int dis[10000];
int vis[10000];

void BFS(int node)
{
   queue<int>q;
   q.push(node);
   vis[node]=1;
   dis[node]=0;
   while(!q.empty())
   {
      int cur=q.front();
      q.pop();
      for(int child:v[cur])
      {
         if(vis[child]==0)
         {
            dis[child]=dis[cur]+1;
            vis[child]=1;
            q.push(child);
         }
      }
   }
}


int32_t main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int n,m;
    cin>>n>>m;
    while(m--)
    {
      int x,y;
      cin>>x>>y;
      v[x].push_back(y);
      v[y].push_back(x);
    }
    BFS(1);
    for(int i=1;i<=n;i++)
    {
      cout<<"Distance of node "<<i<<" = "<<dis[i]<<endl;
    }
    
    return 0;
}
