#include <bits/stdc++.h>
#define int long long int
#define endl '\n'
using namespace std;

const int N = 1e5 + 5;
const int mod = 1e9 + 7;
const int mn = -1;
const int mx = 1e18+7;
queue<int>q;
vector<int>v[1000];
int vis[1000],col[1000];

bool Bfs(int node,int c)
{
  q.push(node);
col[node]=c;
 while(!q.empty())
 {
  int node=q.front();
  q.pop();
  for(auto it:v[node])
  {
    if(col[it]==0)
    {
      col[it]=!col[node];
      q.push(it);
    }
    else if(col[it]==col[node])
    {
      return false;
    }
  }
 }
 return true;
}

int32_t main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int n,e;
    cin>>n>>e;
    while(e--)
    {
      int x,y;
      cin>>x>>y;
      v[x].push_back(y);
      v[y].push_back(x);

    }
    bool ans=Bfs(1,1);
    if(ans==true)cout<<"the graph is Bipartite"<<endl;
    else cout<<"the graph is not Bipartite"<<endl;
    
    return 0;
}

/*
10 10
1 2
2 3
3 4
4 5
5 6
6 7
7 8
6 9
9 10
*/

/*

8 8
1 2
2 3
3 4
4 5
5 6
2 7
7 8
8 4
*/
